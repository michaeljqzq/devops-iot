{
  "manifestVersion": 1.0,
  "extensionId": "r-vss-continuous-delivery-pipeline-templates",
  "name": "DevOps for IoT Edge",
  "publisher": "michaeljqzq",
  "version": "0.1.1",
  "description": "DevOps for IoT Edge",
  "categories": [
    "Integrate"
  ],
  "targets": [{
    "id": "Microsoft.VisualStudio.Services"
  }],
  "files": [{
    "path": "Files",
    "addressable": true
  }],
  "contributions": [{
      "id": "dotnet-newdevice",
      "type": "ms.vss-continuous-delivery.pipeline-template-type",
      "targets": [
        "ms.vss-continuous-delivery.pipeline-templates"
      ],
      "properties": {
        "description": "i18n:Template for configuring CI/CD pipeline for Azure IoT Edge App using .NET Core",
        "attributes": {
          "codeRepositoryType": "Sample",
          "frameworkId": "michaeljqzq.r-vss-continuous-delivery-pipeline-templates.framework-type-iot-edge",
          "runtimeId": "ms.vss-continuous-delivery-pipeline-templates.runtime-type-dotnet",
          "serviceId": "michaeljqzq.r-vss-continuous-delivery-pipeline-templates.service-type-linux-vm-edge-device"
        },
        "parameters": {
          "imports": [
            "Files/Parameters/ArmEndpointParameters.json",
            "Files/Parameters/ContainerRegistryParameters.json",
            "Files/Parameters/IoTHubParameters.json",
            "Files/Parameters/VMParameters.json"
          ]
        },
        "configuration": {
          "assets": [{
            "id": "ARMResourceGroup",
            "type": "endpoint:AzureRM",
            "inputs": {
              "subscriptionId": "{{inputs.subscriptionId}}",
              "authorization": "{{inputs.azureAuth}}"
            }
          }],
          "source": {
            "repository": {
              "id": "https://github.com/VSChina/azure-iot-edge-sample-dotnet",
              "defaultBranch": "master"
            }
          },
          "buildDefinition": {
            "queue": "hostedlinux",
            "templateFile": "Files/BuildDefinitionTemplates/buildIoTEdge.json",
            "variables": {
              "DEVOPS_IOTEDGE_REGISTRY_URL": {
                "value": "{{{inputs.containerRegistryName}}}.azurecr.io"
              }
            },
            "phaseInputs": [{
              "taskInputs": [{
                  "__TaskId__": "94a74903-f93f-4075-884f-dc11f34058b4",
                  "ConnectedServiceName": "{{{assets.ARMResourceGroup}}}",
                  "resourceGroupName": "{{{inputs.resourceGroup}}}",
                  "location": "{{{inputs.containerRegistryLocation}}}",
                  "csmFileLink": "https://raw.githubusercontent.com/michaeljqzq/devops-iot-sample/arm/arm-acr.json",
                  "overrideParameters": "-registryName {{{inputs.containerRegistryName}}} -registrySku \"{{{inputs.containerRegistrySKU}}}\" -registryLocation \"{{{inputs.containerRegistryLocation}}}\""
                },
                {
                  "__TaskId__": "80f3f6a0-82a6-4a22-ba7a-e5b8c541b9b8",
                  "azureSubscriptionEndpoint": "{{{assets.ARMResourceGroup}}}",
                  "azureContainerRegistry": "{\"loginServer\":\"{{{inputs.containerRegistryName}}}.azurecr.io\", \"id\" : \"/subscriptions/{{{inputs.subscriptionId}}}/resourceGroups/{{{inputs.resourceGroup}}}/providers/Microsoft.ContainerRegistry/registries/{{{inputs.containerRegistryName}}}\"}"
                },
                {
                  "__TaskId__": "2ff763a7-ce83-4e1f-bc89-0ae63477cebe"
                }
              ]
            }]
          },
          "releaseDefinition": {
            "environments": [{
              "name": "dev",
              "deployedResourceIds": [
                "/subscriptions/{{{inputs.subscriptionId}}}/resourceGroups/{{{inputs.resourceGroup}}}/providers/Microsoft.Devices/IotHubs/{{{inputs.iotHubName}}}",
                "/subscriptions/{{inputs.subscriptionId}}/resourceGroups/{{inputs.resourceGroup}}/providers/Microsoft.Compute/virtualMachines/{{inputs.vmName}}"
              ],
              "variables": {
                "vmPassword": {
                  "value": "{{{inputs.vmPassword}}}",
                  "isSecret": true
                },
                "DEVOPS_IOTEDGE_REGISTRY_URL": {
                  "value": "{{{inputs.containerRegistryName}}}.azurecr.io"
                }
              },
              "templateFile": "Files/ReleaseDefinitionTemplates/deployIoTEdge.json",
              "phaseInputs": [{
                "queue": "hostedlinux",
                "taskInputs": [{
                    "__TaskId__": "94a74903-f93f-4075-884f-dc11f34058b4",
                    "ConnectedServiceName": "{{{assets.ARMResourceGroup}}}",
                    "ResourceGroupName": "{{{inputs.resourceGroup}}}",
                    "location": "{{{inputs.iotHubLocation}}}",
                    "csmFileLink": "https://raw.githubusercontent.com/michaeljqzq/devops-iot-sample/arm/arm-iothub.json",
                    "overrideParameters": "-iotHubName {{{inputs.iotHubName}}} -iotHubSku \"{{{inputs.iotHubSku}}}\""
                  },
                  {
                    "__TaskId__": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                    "connectedServiceNameARM": "{{{assets.ARMResourceGroup}}}",
                    "inlineScript": "(az extension add --name azure-cli-iot-ext && az iot hub device-identity show --device-id myEdgeDevice --hub-name {{{inputs.iotHubName}}}) || (az iot hub device-identity create --hub-name {{{inputs.iotHubName}}} --device-id myEdgeDevice --edge-enabled && TMP_OUTPUT=\"$(az iot hub device-identity show-connection-string --device-id myEdgeDevice --hub-name {{{inputs.iotHubName}}})\" && RE=\"\\\"cs\\\":\\s?\\\"(.*)\\\"\" && if [[ $TMP_OUTPUT =~ $RE ]]; then CS_OUTPUT=${BASH_REMATCH[1]}; fi && echo \"##vso[task.setvariable variable=CS_OUTPUT]${CS_OUTPUT}\")"
                  },
                  {
                    "__TaskId__": "80f3f6a0-82a6-4a22-ba7a-e5b8c541b9b8",
                    "connectedServiceNameARM": "{{{assets.ARMResourceGroup}}}",
                    "iothubname": "{{inputs.iotHubName}}"
                  },
                  {
                    "__TaskId__": "94a74903-f93f-4075-884f-dc11f34058b4",
                    "ConnectedServiceName": "{{{assets.ARMResourceGroup}}}",
                    "ResourceGroupName": "{{{inputs.resourceGroup}}}",
                    "location": "{{{inputs.vmlocation}}}",
                    "csmFileLink": "https://raw.githubusercontent.com/michaeljqzq/devops-iot-sample/arm/arm-linux-vm.json",
                    "overrideParameters": "-edgeDeviceConnectionString $(CS_OUTPUT) -virtualMachineName \"{{{inputs.vmName}}}\" -adminUsername \"{{{inputs.vmUsername}}}\" -adminPassword \"$(vmPassword)\" -appInsightsLocation \"{{{inputs.appInsightLocation}}}\" -virtualMachineSize \"{{{inputs.vmSize}}}\" -location \"{{{inputs.vmlocation}}}\" "
                  }
                ]
              }]
            }]
          }
        }
      }
    },
    {
      "id": "node-newdevice",
      "type": "ms.vss-continuous-delivery.pipeline-template-type",
      "targets": [
        "ms.vss-continuous-delivery.pipeline-templates"
      ],
      "properties": {
        "description": "i18n:Template for configuring CI/CD pipeline for Azure IoT Edge App using Node.js",
        "attributes": {
          "codeRepositoryType": "Sample",
          "frameworkId": "michaeljqzq.r-vss-continuous-delivery-pipeline-templates.framework-type-iot-edge",
          "runtimeId": "ms.vss-continuous-delivery-pipeline-templates.runtime-type-nodejs",
          "serviceId": "michaeljqzq.r-vss-continuous-delivery-pipeline-templates.service-type-linux-vm-edge-device"
        },
        "parameters": {
          "imports": [
            "Files/Parameters/ArmEndpointParameters.json",
            "Files/Parameters/ContainerRegistryParameters.json",
            "Files/Parameters/IoTHubParameters.json",
            "Files/Parameters/VMParameters.json"
          ]
        },
        "configuration": {
          "assets": [{
            "id": "ARMResourceGroup",
            "type": "endpoint:AzureRM",
            "inputs": {
              "subscriptionId": "{{inputs.subscriptionId}}",
              "authorization": "{{inputs.azureAuth}}"
            }
          }],
          "source": {
            "repository": {
              "id": "https://github.com/VSChina/azure-iot-edge-sample-node",
              "defaultBranch": "master"
            }
          },
          "buildDefinition": {
            "queue": "hostedlinux",
            "templateFile": "Files/BuildDefinitionTemplates/buildIoTEdge.json",
            "variables": {
              "DEVOPS_IOTEDGE_REGISTRY_URL": {
                "value": "{{{inputs.containerRegistryName}}}.azurecr.io"
              }
            },
            "phaseInputs": [{
              "taskInputs": [{
                  "__TaskId__": "94a74903-f93f-4075-884f-dc11f34058b4",
                  "ConnectedServiceName": "{{{assets.ARMResourceGroup}}}",
                  "resourceGroupName": "{{{inputs.resourceGroup}}}",
                  "location": "{{{inputs.containerRegistryLocation}}}",
                  "csmFileLink": "https://raw.githubusercontent.com/michaeljqzq/devops-iot-sample/arm/arm-acr.json",
                  "overrideParameters": "-registryName {{{inputs.containerRegistryName}}} -registrySku \"{{{inputs.containerRegistrySKU}}}\" -registryLocation \"{{{inputs.containerRegistryLocation}}}\""
                },
                {
                  "__TaskId__": "80f3f6a0-82a6-4a22-ba7a-e5b8c541b9b8",
                  "azureSubscriptionEndpoint": "{{{assets.ARMResourceGroup}}}",
                  "azureContainerRegistry": "{\"loginServer\":\"{{{inputs.containerRegistryName}}}.azurecr.io\", \"id\" : \"/subscriptions/{{{inputs.subscriptionId}}}/resourceGroups/{{{inputs.resourceGroup}}}/providers/Microsoft.ContainerRegistry/registries/{{{inputs.containerRegistryName}}}\"}"
                },
                {
                  "__TaskId__": "2ff763a7-ce83-4e1f-bc89-0ae63477cebe"
                }
              ]
            }]
          },
          "releaseDefinition": {
            "environments": [{
              "name": "dev",
              "deployedResourceIds": [
                "/subscriptions/{{{inputs.subscriptionId}}}/resourceGroups/{{{inputs.resourceGroup}}}/providers/Microsoft.Devices/IotHubs/{{{inputs.iotHubName}}}",
                "/subscriptions/{{inputs.subscriptionId}}/resourceGroups/{{inputs.resourceGroup}}/providers/Microsoft.Compute/virtualMachines/{{inputs.vmName}}"
              ],
              "variables": {
                "vmPassword": {
                  "value": "{{{inputs.vmPassword}}}",
                  "isSecret": true
                },
                "DEVOPS_IOTEDGE_REGISTRY_URL": {
                  "value": "{{{inputs.containerRegistryName}}}.azurecr.io"
                }
              },
              "templateFile": "Files/ReleaseDefinitionTemplates/deployIoTEdge.json",
              "phaseInputs": [{
                "queue": "hostedlinux",
                "taskInputs": [{
                    "__TaskId__": "94a74903-f93f-4075-884f-dc11f34058b4",
                    "ConnectedServiceName": "{{{assets.ARMResourceGroup}}}",
                    "ResourceGroupName": "{{{inputs.resourceGroup}}}",
                    "location": "{{{inputs.iotHubLocation}}}",
                    "csmFileLink": "https://raw.githubusercontent.com/michaeljqzq/devops-iot-sample/arm/arm-iothub.json",
                    "overrideParameters": "-iotHubName {{{inputs.iotHubName}}} -iotHubSku \"{{{inputs.iotHubSku}}}\""
                  },
                  {
                    "__TaskId__": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                    "connectedServiceNameARM": "{{{assets.ARMResourceGroup}}}",
                    "inlineScript": "(az extension add --name azure-cli-iot-ext && az iot hub device-identity show --device-id myEdgeDevice --hub-name {{{inputs.iotHubName}}}) || (az iot hub device-identity create --hub-name {{{inputs.iotHubName}}} --device-id myEdgeDevice --edge-enabled && TMP_OUTPUT=\"$(az iot hub device-identity show-connection-string --device-id myEdgeDevice --hub-name {{{inputs.iotHubName}}})\" && RE=\"\\\"cs\\\":\\s?\\\"(.*)\\\"\" && if [[ $TMP_OUTPUT =~ $RE ]]; then CS_OUTPUT=${BASH_REMATCH[1]}; fi && echo \"##vso[task.setvariable variable=CS_OUTPUT]${CS_OUTPUT}\")"
                  },
                  {
                    "__TaskId__": "80f3f6a0-82a6-4a22-ba7a-e5b8c541b9b8",
                    "connectedServiceNameARM": "{{{assets.ARMResourceGroup}}}",
                    "iothubname": "{{inputs.iotHubName}}"
                  },
                  {
                    "__TaskId__": "94a74903-f93f-4075-884f-dc11f34058b4",
                    "ConnectedServiceName": "{{{assets.ARMResourceGroup}}}",
                    "ResourceGroupName": "{{{inputs.resourceGroup}}}",
                    "location": "{{{inputs.vmlocation}}}",
                    "csmFileLink": "https://raw.githubusercontent.com/michaeljqzq/devops-iot-sample/arm/arm-linux-vm.json",
                    "overrideParameters": "-edgeDeviceConnectionString $(CS_OUTPUT) -virtualMachineName \"{{{inputs.vmName}}}\" -adminUsername \"{{{inputs.vmUsername}}}\" -adminPassword \"$(vmPassword)\" -appInsightsLocation \"{{{inputs.appInsightLocation}}}\" -virtualMachineSize \"{{{inputs.vmSize}}}\" -location \"{{{inputs.vmlocation}}}\" "
                  }
                ]
              }]
            }]
          }
        }
      }
    },
    {
      "id": "java-newdevice",
      "type": "ms.vss-continuous-delivery.pipeline-template-type",
      "targets": [
        "ms.vss-continuous-delivery.pipeline-templates"
      ],
      "properties": {
        "description": "i18n:Template for configuring CI/CD pipeline for Azure IoT Edge App using Java",
        "attributes": {
          "codeRepositoryType": "Sample",
          "frameworkId": "michaeljqzq.r-vss-continuous-delivery-pipeline-templates.framework-type-iot-edge",
          "runtimeId": "ms.vss-continuous-delivery-pipeline-templates.runtime-type-java",
          "serviceId": "michaeljqzq.r-vss-continuous-delivery-pipeline-templates.service-type-linux-vm-edge-device"
        },
        "parameters": {
          "imports": [
            "Files/Parameters/ArmEndpointParameters.json",
            "Files/Parameters/ContainerRegistryParameters.json",
            "Files/Parameters/IoTHubParameters.json",
            "Files/Parameters/VMParameters.json"
          ]
        },
        "configuration": {
          "assets": [{
            "id": "ARMResourceGroup",
            "type": "endpoint:AzureRM",
            "inputs": {
              "subscriptionId": "{{inputs.subscriptionId}}",
              "authorization": "{{inputs.azureAuth}}"
            }
          }],
          "source": {
            "repository": {
              "id": "https://github.com/VSChina/azure-iot-edge-sample-java",
              "defaultBranch": "master"
            }
          },
          "buildDefinition": {
            "queue": "hostedlinux",
            "templateFile": "Files/BuildDefinitionTemplates/buildIoTEdge.json",
            "variables": {
              "DEVOPS_IOTEDGE_REGISTRY_URL": {
                "value": "{{{inputs.containerRegistryName}}}.azurecr.io"
              }
            },
            "phaseInputs": [{
              "taskInputs": [{
                  "__TaskId__": "94a74903-f93f-4075-884f-dc11f34058b4",
                  "ConnectedServiceName": "{{{assets.ARMResourceGroup}}}",
                  "resourceGroupName": "{{{inputs.resourceGroup}}}",
                  "location": "{{{inputs.containerRegistryLocation}}}",
                  "csmFileLink": "https://raw.githubusercontent.com/michaeljqzq/devops-iot-sample/arm/arm-acr.json",
                  "overrideParameters": "-registryName {{{inputs.containerRegistryName}}} -registrySku \"{{{inputs.containerRegistrySKU}}}\" -registryLocation \"{{{inputs.containerRegistryLocation}}}\""
                },
                {
                  "__TaskId__": "80f3f6a0-82a6-4a22-ba7a-e5b8c541b9b8",
                  "azureSubscriptionEndpoint": "{{{assets.ARMResourceGroup}}}",
                  "azureContainerRegistry": "{\"loginServer\":\"{{{inputs.containerRegistryName}}}.azurecr.io\", \"id\" : \"/subscriptions/{{{inputs.subscriptionId}}}/resourceGroups/{{{inputs.resourceGroup}}}/providers/Microsoft.ContainerRegistry/registries/{{{inputs.containerRegistryName}}}\"}"
                },
                {
                  "__TaskId__": "2ff763a7-ce83-4e1f-bc89-0ae63477cebe"
                }
              ]
            }]
          },
          "releaseDefinition": {
            "environments": [{
              "name": "dev",
              "deployedResourceIds": [
                "/subscriptions/{{{inputs.subscriptionId}}}/resourceGroups/{{{inputs.resourceGroup}}}/providers/Microsoft.Devices/IotHubs/{{{inputs.iotHubName}}}",
                "/subscriptions/{{inputs.subscriptionId}}/resourceGroups/{{inputs.resourceGroup}}/providers/Microsoft.Compute/virtualMachines/{{inputs.vmName}}"
              ],
              "variables": {
                "vmPassword": {
                  "value": "{{{inputs.vmPassword}}}",
                  "isSecret": true
                },
                "DEVOPS_IOTEDGE_REGISTRY_URL": {
                  "value": "{{{inputs.containerRegistryName}}}.azurecr.io"
                }
              },
              "templateFile": "Files/ReleaseDefinitionTemplates/deployIoTEdge.json",
              "phaseInputs": [{
                "queue": "hostedlinux",
                "taskInputs": [{
                    "__TaskId__": "94a74903-f93f-4075-884f-dc11f34058b4",
                    "ConnectedServiceName": "{{{assets.ARMResourceGroup}}}",
                    "ResourceGroupName": "{{{inputs.resourceGroup}}}",
                    "location": "{{{inputs.iotHubLocation}}}",
                    "csmFileLink": "https://raw.githubusercontent.com/michaeljqzq/devops-iot-sample/arm/arm-iothub.json",
                    "overrideParameters": "-iotHubName {{{inputs.iotHubName}}} -iotHubSku \"{{{inputs.iotHubSku}}}\""
                  },
                  {
                    "__TaskId__": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                    "connectedServiceNameARM": "{{{assets.ARMResourceGroup}}}",
                    "inlineScript": "(az extension add --name azure-cli-iot-ext && az iot hub device-identity show --device-id myEdgeDevice --hub-name {{{inputs.iotHubName}}}) || (az iot hub device-identity create --hub-name {{{inputs.iotHubName}}} --device-id myEdgeDevice --edge-enabled && TMP_OUTPUT=\"$(az iot hub device-identity show-connection-string --device-id myEdgeDevice --hub-name {{{inputs.iotHubName}}})\" && RE=\"\\\"cs\\\":\\s?\\\"(.*)\\\"\" && if [[ $TMP_OUTPUT =~ $RE ]]; then CS_OUTPUT=${BASH_REMATCH[1]}; fi && echo \"##vso[task.setvariable variable=CS_OUTPUT]${CS_OUTPUT}\")"
                  },
                  {
                    "__TaskId__": "80f3f6a0-82a6-4a22-ba7a-e5b8c541b9b8",
                    "connectedServiceNameARM": "{{{assets.ARMResourceGroup}}}",
                    "iothubname": "{{inputs.iotHubName}}"
                  },
                  {
                    "__TaskId__": "94a74903-f93f-4075-884f-dc11f34058b4",
                    "ConnectedServiceName": "{{{assets.ARMResourceGroup}}}",
                    "ResourceGroupName": "{{{inputs.resourceGroup}}}",
                    "location": "{{{inputs.vmlocation}}}",
                    "csmFileLink": "https://raw.githubusercontent.com/michaeljqzq/devops-iot-sample/arm/arm-linux-vm.json",
                    "overrideParameters": "-edgeDeviceConnectionString $(CS_OUTPUT) -virtualMachineName \"{{{inputs.vmName}}}\" -adminUsername \"{{{inputs.vmUsername}}}\" -adminPassword \"$(vmPassword)\" -appInsightsLocation \"{{{inputs.appInsightLocation}}}\" -virtualMachineSize \"{{{inputs.vmSize}}}\" -location \"{{{inputs.vmlocation}}}\" "
                  }
                ]
              }]
            }]
          }
        }
      }
    },
    {
      "id": "c-newdevice",
      "type": "ms.vss-continuous-delivery.pipeline-template-type",
      "targets": [
        "ms.vss-continuous-delivery.pipeline-templates"
      ],
      "properties": {
        "description": "i18n:Template for configuring CI/CD pipeline for Azure IoT Edge App using C",
        "attributes": {
          "codeRepositoryType": "Sample",
          "frameworkId": "michaeljqzq.r-vss-continuous-delivery-pipeline-templates.framework-type-iot-edge",
          "runtimeId": "michaeljqzq.r-vss-continuous-delivery-pipeline-templates.runtime-type-edge-c",
          "serviceId": "michaeljqzq.r-vss-continuous-delivery-pipeline-templates.service-type-linux-vm-edge-device"
        },
        "parameters": {
          "imports": [
            "Files/Parameters/ArmEndpointParameters.json",
            "Files/Parameters/ContainerRegistryParameters.json",
            "Files/Parameters/IoTHubParameters.json",
            "Files/Parameters/VMParameters.json"
          ]
        },
        "configuration": {
          "assets": [{
            "id": "ARMResourceGroup",
            "type": "endpoint:AzureRM",
            "inputs": {
              "subscriptionId": "{{inputs.subscriptionId}}",
              "authorization": "{{inputs.azureAuth}}"
            }
          }],
          "source": {
            "repository": {
              "id": "https://github.com/VSChina/azure-iot-edge-sample-c",
              "defaultBranch": "master"
            }
          },
          "buildDefinition": {
            "queue": "hostedlinux",
            "templateFile": "Files/BuildDefinitionTemplates/buildIoTEdge.json",
            "variables": {
              "DEVOPS_IOTEDGE_REGISTRY_URL": {
                "value": "{{{inputs.containerRegistryName}}}.azurecr.io"
              }
            },
            "phaseInputs": [{
              "taskInputs": [{
                  "__TaskId__": "94a74903-f93f-4075-884f-dc11f34058b4",
                  "ConnectedServiceName": "{{{assets.ARMResourceGroup}}}",
                  "resourceGroupName": "{{{inputs.resourceGroup}}}",
                  "location": "{{{inputs.containerRegistryLocation}}}",
                  "csmFileLink": "https://raw.githubusercontent.com/michaeljqzq/devops-iot-sample/arm/arm-acr.json",
                  "overrideParameters": "-registryName {{{inputs.containerRegistryName}}} -registrySku \"{{{inputs.containerRegistrySKU}}}\" -registryLocation \"{{{inputs.containerRegistryLocation}}}\""
                },
                {
                  "__TaskId__": "80f3f6a0-82a6-4a22-ba7a-e5b8c541b9b8",
                  "azureSubscriptionEndpoint": "{{{assets.ARMResourceGroup}}}",
                  "azureContainerRegistry": "{\"loginServer\":\"{{{inputs.containerRegistryName}}}.azurecr.io\", \"id\" : \"/subscriptions/{{{inputs.subscriptionId}}}/resourceGroups/{{{inputs.resourceGroup}}}/providers/Microsoft.ContainerRegistry/registries/{{{inputs.containerRegistryName}}}\"}"
                },
                {
                  "__TaskId__": "2ff763a7-ce83-4e1f-bc89-0ae63477cebe"
                }
              ]
            }]
          },
          "releaseDefinition": {
            "environments": [{
              "name": "dev",
              "deployedResourceIds": [
                "/subscriptions/{{{inputs.subscriptionId}}}/resourceGroups/{{{inputs.resourceGroup}}}/providers/Microsoft.Devices/IotHubs/{{{inputs.iotHubName}}}",
                "/subscriptions/{{inputs.subscriptionId}}/resourceGroups/{{inputs.resourceGroup}}/providers/Microsoft.Compute/virtualMachines/{{inputs.vmName}}"
              ],
              "variables": {
                "vmPassword": {
                  "value": "{{{inputs.vmPassword}}}",
                  "isSecret": true
                },
                "DEVOPS_IOTEDGE_REGISTRY_URL": {
                  "value": "{{{inputs.containerRegistryName}}}.azurecr.io"
                }
              },
              "templateFile": "Files/ReleaseDefinitionTemplates/deployIoTEdge.json",
              "phaseInputs": [{
                "queue": "hostedlinux",
                "taskInputs": [{
                    "__TaskId__": "94a74903-f93f-4075-884f-dc11f34058b4",
                    "ConnectedServiceName": "{{{assets.ARMResourceGroup}}}",
                    "ResourceGroupName": "{{{inputs.resourceGroup}}}",
                    "location": "{{{inputs.iotHubLocation}}}",
                    "csmFileLink": "https://raw.githubusercontent.com/michaeljqzq/devops-iot-sample/arm/arm-iothub.json",
                    "overrideParameters": "-iotHubName {{{inputs.iotHubName}}} -iotHubSku \"{{{inputs.iotHubSku}}}\""
                  },
                  {
                    "__TaskId__": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                    "connectedServiceNameARM": "{{{assets.ARMResourceGroup}}}",
                    "inlineScript": "(az extension add --name azure-cli-iot-ext && az iot hub device-identity show --device-id myEdgeDevice --hub-name {{{inputs.iotHubName}}}) || (az iot hub device-identity create --hub-name {{{inputs.iotHubName}}} --device-id myEdgeDevice --edge-enabled && TMP_OUTPUT=\"$(az iot hub device-identity show-connection-string --device-id myEdgeDevice --hub-name {{{inputs.iotHubName}}})\" && RE=\"\\\"cs\\\":\\s?\\\"(.*)\\\"\" && if [[ $TMP_OUTPUT =~ $RE ]]; then CS_OUTPUT=${BASH_REMATCH[1]}; fi && echo \"##vso[task.setvariable variable=CS_OUTPUT]${CS_OUTPUT}\")"
                  },
                  {
                    "__TaskId__": "80f3f6a0-82a6-4a22-ba7a-e5b8c541b9b8",
                    "connectedServiceNameARM": "{{{assets.ARMResourceGroup}}}",
                    "iothubname": "{{inputs.iotHubName}}"
                  },
                  {
                    "__TaskId__": "94a74903-f93f-4075-884f-dc11f34058b4",
                    "ConnectedServiceName": "{{{assets.ARMResourceGroup}}}",
                    "ResourceGroupName": "{{{inputs.resourceGroup}}}",
                    "location": "{{{inputs.vmlocation}}}",
                    "csmFileLink": "https://raw.githubusercontent.com/michaeljqzq/devops-iot-sample/arm/arm-linux-vm.json",
                    "overrideParameters": "-edgeDeviceConnectionString $(CS_OUTPUT) -virtualMachineName \"{{{inputs.vmName}}}\" -adminUsername \"{{{inputs.vmUsername}}}\" -adminPassword \"$(vmPassword)\" -appInsightsLocation \"{{{inputs.appInsightLocation}}}\" -virtualMachineSize \"{{{inputs.vmSize}}}\" -location \"{{{inputs.vmlocation}}}\" "
                  }
                ]
              }]
            }]
          }
        }
      }
    },
    {
      "id": "python-newdevice",
      "type": "ms.vss-continuous-delivery.pipeline-template-type",
      "targets": [
        "ms.vss-continuous-delivery.pipeline-templates"
      ],
      "properties": {
        "description": "i18n:Template for configuring CI/CD pipeline for Azure IoT Edge App using Python",
        "attributes": {
          "codeRepositoryType": "Sample",
          "frameworkId": "michaeljqzq.r-vss-continuous-delivery-pipeline-templates.framework-type-iot-edge",
          "runtimeId": "ms.vss-continuous-delivery-pipeline-templates.runtime-type-python",
          "serviceId": "michaeljqzq.r-vss-continuous-delivery-pipeline-templates.service-type-linux-vm-edge-device"
        },
        "parameters": {
          "imports": [
            "Files/Parameters/ArmEndpointParameters.json",
            "Files/Parameters/ContainerRegistryParameters.json",
            "Files/Parameters/IoTHubParameters.json",
            "Files/Parameters/VMParameters.json"
          ]
        },
        "configuration": {
          "assets": [{
            "id": "ARMResourceGroup",
            "type": "endpoint:AzureRM",
            "inputs": {
              "subscriptionId": "{{inputs.subscriptionId}}",
              "authorization": "{{inputs.azureAuth}}"
            }
          }],
          "source": {
            "repository": {
              "id": "https://github.com/VSChina/azure-iot-edge-sample-python",
              "defaultBranch": "master"
            }
          },
          "buildDefinition": {
            "queue": "hostedlinux",
            "templateFile": "Files/BuildDefinitionTemplates/buildIoTEdge.json",
            "variables": {
              "DEVOPS_IOTEDGE_REGISTRY_URL": {
                "value": "{{{inputs.containerRegistryName}}}.azurecr.io"
              }
            },
            "phaseInputs": [{
              "taskInputs": [{
                  "__TaskId__": "94a74903-f93f-4075-884f-dc11f34058b4",
                  "ConnectedServiceName": "{{{assets.ARMResourceGroup}}}",
                  "resourceGroupName": "{{{inputs.resourceGroup}}}",
                  "location": "{{{inputs.containerRegistryLocation}}}",
                  "csmFileLink": "https://raw.githubusercontent.com/michaeljqzq/devops-iot-sample/arm/arm-acr.json",
                  "overrideParameters": "-registryName {{{inputs.containerRegistryName}}} -registrySku \"{{{inputs.containerRegistrySKU}}}\" -registryLocation \"{{{inputs.containerRegistryLocation}}}\""
                },
                {
                  "__TaskId__": "80f3f6a0-82a6-4a22-ba7a-e5b8c541b9b8",
                  "azureSubscriptionEndpoint": "{{{assets.ARMResourceGroup}}}",
                  "azureContainerRegistry": "{\"loginServer\":\"{{{inputs.containerRegistryName}}}.azurecr.io\", \"id\" : \"/subscriptions/{{{inputs.subscriptionId}}}/resourceGroups/{{{inputs.resourceGroup}}}/providers/Microsoft.ContainerRegistry/registries/{{{inputs.containerRegistryName}}}\"}"
                },
                {
                  "__TaskId__": "2ff763a7-ce83-4e1f-bc89-0ae63477cebe"
                }
              ]
            }]
          },
          "releaseDefinition": {
            "environments": [{
              "name": "dev",
              "deployedResourceIds": [
                "/subscriptions/{{{inputs.subscriptionId}}}/resourceGroups/{{{inputs.resourceGroup}}}/providers/Microsoft.Devices/IotHubs/{{{inputs.iotHubName}}}",
                "/subscriptions/{{inputs.subscriptionId}}/resourceGroups/{{inputs.resourceGroup}}/providers/Microsoft.Compute/virtualMachines/{{inputs.vmName}}"
              ],
              "variables": {
                "vmPassword": {
                  "value": "{{{inputs.vmPassword}}}",
                  "isSecret": true
                },
                "DEVOPS_IOTEDGE_REGISTRY_URL": {
                  "value": "{{{inputs.containerRegistryName}}}.azurecr.io"
                }
              },
              "templateFile": "Files/ReleaseDefinitionTemplates/deployIoTEdge.json",
              "phaseInputs": [{
                "queue": "hostedlinux",
                "taskInputs": [{
                    "__TaskId__": "94a74903-f93f-4075-884f-dc11f34058b4",
                    "ConnectedServiceName": "{{{assets.ARMResourceGroup}}}",
                    "ResourceGroupName": "{{{inputs.resourceGroup}}}",
                    "location": "{{{inputs.iotHubLocation}}}",
                    "csmFileLink": "https://raw.githubusercontent.com/michaeljqzq/devops-iot-sample/arm/arm-iothub.json",
                    "overrideParameters": "-iotHubName {{{inputs.iotHubName}}} -iotHubSku \"{{{inputs.iotHubSku}}}\""
                  },
                  {
                    "__TaskId__": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                    "connectedServiceNameARM": "{{{assets.ARMResourceGroup}}}",
                    "inlineScript": "(az extension add --name azure-cli-iot-ext && az iot hub device-identity show --device-id myEdgeDevice --hub-name {{{inputs.iotHubName}}}) || (az iot hub device-identity create --hub-name {{{inputs.iotHubName}}} --device-id myEdgeDevice --edge-enabled && TMP_OUTPUT=\"$(az iot hub device-identity show-connection-string --device-id myEdgeDevice --hub-name {{{inputs.iotHubName}}})\" && RE=\"\\\"cs\\\":\\s?\\\"(.*)\\\"\" && if [[ $TMP_OUTPUT =~ $RE ]]; then CS_OUTPUT=${BASH_REMATCH[1]}; fi && echo \"##vso[task.setvariable variable=CS_OUTPUT]${CS_OUTPUT}\")"
                  },
                  {
                    "__TaskId__": "80f3f6a0-82a6-4a22-ba7a-e5b8c541b9b8",
                    "connectedServiceNameARM": "{{{assets.ARMResourceGroup}}}",
                    "iothubname": "{{inputs.iotHubName}}"
                  },
                  {
                    "__TaskId__": "94a74903-f93f-4075-884f-dc11f34058b4",
                    "ConnectedServiceName": "{{{assets.ARMResourceGroup}}}",
                    "ResourceGroupName": "{{{inputs.resourceGroup}}}",
                    "location": "{{{inputs.vmlocation}}}",
                    "csmFileLink": "https://raw.githubusercontent.com/michaeljqzq/devops-iot-sample/arm/arm-linux-vm.json",
                    "overrideParameters": "-edgeDeviceConnectionString $(CS_OUTPUT) -virtualMachineName \"{{{inputs.vmName}}}\" -adminUsername \"{{{inputs.vmUsername}}}\" -adminPassword \"$(vmPassword)\" -appInsightsLocation \"{{{inputs.appInsightLocation}}}\" -virtualMachineSize \"{{{inputs.vmSize}}}\" -location \"{{{inputs.vmlocation}}}\" "
                  }
                ]
              }]
            }]
          }
        }
      }
    },
    {
      "id": "dotnet-existingdevice",
      "type": "ms.vss-continuous-delivery.pipeline-template-type",
      "targets": [
        "ms.vss-continuous-delivery.pipeline-templates"
      ],
      "properties": {
        "description": "i18n:Template for configuring CI/CD pipeline for Azure IoT Edge App using .NET Core",
        "attributes": {
          "codeRepositoryType": "Sample",
          "frameworkId": "michaeljqzq.r-vss-continuous-delivery-pipeline-templates.framework-type-iot-edge",
          "runtimeId": "ms.vss-continuous-delivery-pipeline-templates.runtime-type-dotnet",
          "serviceId": "michaeljqzq.r-vss-continuous-delivery-pipeline-templates.service-type-existing-edge-device"
        },
        "parameters": {
          "imports": [
            "Files/Parameters/ArmEndpointParameters.json",
            "Files/Parameters/ContainerRegistryParameters.json",
            "Files/Parameters/IoTHubParameters.json"
          ]
        },
        "configuration": {
          "assets": [{
            "id": "ARMResourceGroup",
            "type": "endpoint:AzureRM",
            "inputs": {
              "subscriptionId": "{{inputs.subscriptionId}}",
              "authorization": "{{inputs.azureAuth}}"
            }
          }],
          "source": {
            "repository": {
              "id": "https://github.com/VSChina/azure-iot-edge-sample-dotnet",
              "defaultBranch": "master"
            }
          },
          "buildDefinition": {
            "queue": "hostedlinux",
            "templateFile": "Files/BuildDefinitionTemplates/buildIoTEdge.json",
            "variables": {
              "DEVOPS_IOTEDGE_REGISTRY_URL": {
                "value": "{{{inputs.containerRegistryName}}}.azurecr.io"
              }
            },
            "phaseInputs": [{
              "taskInputs": [{
                  "__TaskId__": "94a74903-f93f-4075-884f-dc11f34058b4",
                  "ConnectedServiceName": "{{{assets.ARMResourceGroup}}}",
                  "resourceGroupName": "{{{inputs.resourceGroup}}}",
                  "location": "{{{inputs.containerRegistryLocation}}}",
                  "csmFileLink": "https://raw.githubusercontent.com/michaeljqzq/devops-iot-sample/arm/arm-acr.json",
                  "overrideParameters": "-registryName {{{inputs.containerRegistryName}}} -registrySku \"{{{inputs.containerRegistrySKU}}}\" -registryLocation \"{{{inputs.containerRegistryLocation}}}\""
                },
                {
                  "__TaskId__": "80f3f6a0-82a6-4a22-ba7a-e5b8c541b9b8",
                  "azureSubscriptionEndpoint": "{{{assets.ARMResourceGroup}}}",
                  "azureContainerRegistry": "{\"loginServer\":\"{{{inputs.containerRegistryName}}}.azurecr.io\", \"id\" : \"/subscriptions/{{{inputs.subscriptionId}}}/resourceGroups/{{{inputs.resourceGroup}}}/providers/Microsoft.ContainerRegistry/registries/{{{inputs.containerRegistryName}}}\"}"
                },
                {
                  "__TaskId__": "2ff763a7-ce83-4e1f-bc89-0ae63477cebe"
                }
              ]
            }]
          },
          "releaseDefinition": {
            "environments": [{
              "name": "dev",
              "deployedResourceIds": [
                "/subscriptions/{{{inputs.subscriptionId}}}/resourceGroups/{{{inputs.resourceGroup}}}/providers/Microsoft.Devices/IotHubs/{{{inputs.iotHubName}}}"
              ],
              "variables": {
                "DEVOPS_IOTEDGE_REGISTRY_URL": {
                  "value": "{{{inputs.containerRegistryName}}}.azurecr.io"
                }
              },
              "templateFile": "Files/ReleaseDefinitionTemplates/deployIoTEdgeWithoutVM.json",
              "phaseInputs": [{
                "queue": "hostedlinux",
                "taskInputs": [{
                    "__TaskId__": "94a74903-f93f-4075-884f-dc11f34058b4",
                    "ConnectedServiceName": "{{{assets.ARMResourceGroup}}}",
                    "ResourceGroupName": "{{{inputs.resourceGroup}}}",
                    "location": "{{{inputs.iotHubLocation}}}",
                    "csmFileLink": "https://raw.githubusercontent.com/michaeljqzq/devops-iot-sample/arm/arm-iothub.json",
                    "overrideParameters": "-iotHubName {{{inputs.iotHubName}}} -iotHubSku \"{{{inputs.iotHubSku}}}\""
                  },
                  {
                    "__TaskId__": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                    "connectedServiceNameARM": "{{{assets.ARMResourceGroup}}}",
                    "inlineScript": "(az extension add --name azure-cli-iot-ext && az iot hub device-identity show --device-id myEdgeDevice --hub-name {{{inputs.iotHubName}}}) || (az iot hub device-identity create --hub-name {{{inputs.iotHubName}}} --device-id myEdgeDevice --edge-enabled && TMP_OUTPUT=\"$(az iot hub device-identity show-connection-string --device-id myEdgeDevice --hub-name {{{inputs.iotHubName}}})\" && RE=\"\\\"cs\\\":\\s?\\\"(.*)\\\"\" && if [[ $TMP_OUTPUT =~ $RE ]]; then CS_OUTPUT=${BASH_REMATCH[1]}; fi && echo \"##vso[task.setvariable variable=CS_OUTPUT]${CS_OUTPUT}\")"
                  },
                  {
                    "__TaskId__": "80f3f6a0-82a6-4a22-ba7a-e5b8c541b9b8",
                    "connectedServiceNameARM": "{{{assets.ARMResourceGroup}}}",
                    "iothubname": "{{inputs.iotHubName}}"
                  }
                ]
              }]
            }]
          }
        }
      }
    }, {
      "id": "node-existingdevice",
      "type": "ms.vss-continuous-delivery.pipeline-template-type",
      "targets": [
        "ms.vss-continuous-delivery.pipeline-templates"
      ],
      "properties": {
        "description": "i18n:Template for configuring CI/CD pipeline for Azure IoT Edge App using Node.js",
        "attributes": {
          "codeRepositoryType": "Sample",
          "frameworkId": "michaeljqzq.r-vss-continuous-delivery-pipeline-templates.framework-type-iot-edge",
          "runtimeId": "ms.vss-continuous-delivery-pipeline-templates.runtime-type-nodejs",
          "serviceId": "michaeljqzq.r-vss-continuous-delivery-pipeline-templates.service-type-existing-edge-device"
        },
        "parameters": {
          "imports": [
            "Files/Parameters/ArmEndpointParameters.json",
            "Files/Parameters/ContainerRegistryParameters.json",
            "Files/Parameters/IoTHubParameters.json"
          ]
        },
        "configuration": {
          "assets": [{
            "id": "ARMResourceGroup",
            "type": "endpoint:AzureRM",
            "inputs": {
              "subscriptionId": "{{inputs.subscriptionId}}",
              "authorization": "{{inputs.azureAuth}}"
            }
          }],
          "source": {
            "repository": {
              "id": "https://github.com/VSChina/azure-iot-edge-sample-node",
              "defaultBranch": "master"
            }
          },
          "buildDefinition": {
            "queue": "hostedlinux",
            "templateFile": "Files/BuildDefinitionTemplates/buildIoTEdge.json",
            "variables": {
              "DEVOPS_IOTEDGE_REGISTRY_URL": {
                "value": "{{{inputs.containerRegistryName}}}.azurecr.io"
              }
            },
            "phaseInputs": [{
              "taskInputs": [{
                  "__TaskId__": "94a74903-f93f-4075-884f-dc11f34058b4",
                  "ConnectedServiceName": "{{{assets.ARMResourceGroup}}}",
                  "resourceGroupName": "{{{inputs.resourceGroup}}}",
                  "location": "{{{inputs.containerRegistryLocation}}}",
                  "csmFileLink": "https://raw.githubusercontent.com/michaeljqzq/devops-iot-sample/arm/arm-acr.json",
                  "overrideParameters": "-registryName {{{inputs.containerRegistryName}}} -registrySku \"{{{inputs.containerRegistrySKU}}}\" -registryLocation \"{{{inputs.containerRegistryLocation}}}\""
                },
                {
                  "__TaskId__": "80f3f6a0-82a6-4a22-ba7a-e5b8c541b9b8",
                  "azureSubscriptionEndpoint": "{{{assets.ARMResourceGroup}}}",
                  "azureContainerRegistry": "{\"loginServer\":\"{{{inputs.containerRegistryName}}}.azurecr.io\", \"id\" : \"/subscriptions/{{{inputs.subscriptionId}}}/resourceGroups/{{{inputs.resourceGroup}}}/providers/Microsoft.ContainerRegistry/registries/{{{inputs.containerRegistryName}}}\"}"
                },
                {
                  "__TaskId__": "2ff763a7-ce83-4e1f-bc89-0ae63477cebe"
                }
              ]
            }]
          },
          "releaseDefinition": {
            "environments": [{
              "name": "dev",
              "deployedResourceIds": [
                "/subscriptions/{{{inputs.subscriptionId}}}/resourceGroups/{{{inputs.resourceGroup}}}/providers/Microsoft.Devices/IotHubs/{{{inputs.iotHubName}}}"
              ],
              "variables": {
                "DEVOPS_IOTEDGE_REGISTRY_URL": {
                  "value": "{{{inputs.containerRegistryName}}}.azurecr.io"
                }
              },
              "templateFile": "Files/ReleaseDefinitionTemplates/deployIoTEdgeWithoutVM.json",
              "phaseInputs": [{
                "queue": "hostedlinux",
                "taskInputs": [{
                    "__TaskId__": "94a74903-f93f-4075-884f-dc11f34058b4",
                    "ConnectedServiceName": "{{{assets.ARMResourceGroup}}}",
                    "ResourceGroupName": "{{{inputs.resourceGroup}}}",
                    "location": "{{{inputs.iotHubLocation}}}",
                    "csmFileLink": "https://raw.githubusercontent.com/michaeljqzq/devops-iot-sample/arm/arm-iothub.json",
                    "overrideParameters": "-iotHubName {{{inputs.iotHubName}}} -iotHubSku \"{{{inputs.iotHubSku}}}\""
                  },
                  {
                    "__TaskId__": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                    "connectedServiceNameARM": "{{{assets.ARMResourceGroup}}}",
                    "inlineScript": "(az extension add --name azure-cli-iot-ext && az iot hub device-identity show --device-id myEdgeDevice --hub-name {{{inputs.iotHubName}}}) || (az iot hub device-identity create --hub-name {{{inputs.iotHubName}}} --device-id myEdgeDevice --edge-enabled && TMP_OUTPUT=\"$(az iot hub device-identity show-connection-string --device-id myEdgeDevice --hub-name {{{inputs.iotHubName}}})\" && RE=\"\\\"cs\\\":\\s?\\\"(.*)\\\"\" && if [[ $TMP_OUTPUT =~ $RE ]]; then CS_OUTPUT=${BASH_REMATCH[1]}; fi && echo \"##vso[task.setvariable variable=CS_OUTPUT]${CS_OUTPUT}\")"
                  },
                  {
                    "__TaskId__": "80f3f6a0-82a6-4a22-ba7a-e5b8c541b9b8",
                    "connectedServiceNameARM": "{{{assets.ARMResourceGroup}}}",
                    "iothubname": "{{inputs.iotHubName}}"
                  }
                ]
              }]
            }]
          }
        }
      }
    }, {
      "id": "java-existingdevice",
      "type": "ms.vss-continuous-delivery.pipeline-template-type",
      "targets": [
        "ms.vss-continuous-delivery.pipeline-templates"
      ],
      "properties": {
        "description": "i18n:Template for configuring CI/CD pipeline for Azure IoT Edge App using Java",
        "attributes": {
          "codeRepositoryType": "Sample",
          "frameworkId": "michaeljqzq.r-vss-continuous-delivery-pipeline-templates.framework-type-iot-edge",
          "runtimeId": "ms.vss-continuous-delivery-pipeline-templates.runtime-type-java",
          "serviceId": "michaeljqzq.r-vss-continuous-delivery-pipeline-templates.service-type-existing-edge-device"
        },
        "parameters": {
          "imports": [
            "Files/Parameters/ArmEndpointParameters.json",
            "Files/Parameters/ContainerRegistryParameters.json",
            "Files/Parameters/IoTHubParameters.json"
          ]
        },
        "configuration": {
          "assets": [{
            "id": "ARMResourceGroup",
            "type": "endpoint:AzureRM",
            "inputs": {
              "subscriptionId": "{{inputs.subscriptionId}}",
              "authorization": "{{inputs.azureAuth}}"
            }
          }],
          "source": {
            "repository": {
              "id": "https://github.com/VSChina/azure-iot-edge-sample-java",
              "defaultBranch": "master"
            }
          },
          "buildDefinition": {
            "queue": "hostedlinux",
            "templateFile": "Files/BuildDefinitionTemplates/buildIoTEdge.json",
            "variables": {
              "DEVOPS_IOTEDGE_REGISTRY_URL": {
                "value": "{{{inputs.containerRegistryName}}}.azurecr.io"
              }
            },
            "phaseInputs": [{
              "taskInputs": [{
                  "__TaskId__": "94a74903-f93f-4075-884f-dc11f34058b4",
                  "ConnectedServiceName": "{{{assets.ARMResourceGroup}}}",
                  "resourceGroupName": "{{{inputs.resourceGroup}}}",
                  "location": "{{{inputs.containerRegistryLocation}}}",
                  "csmFileLink": "https://raw.githubusercontent.com/michaeljqzq/devops-iot-sample/arm/arm-acr.json",
                  "overrideParameters": "-registryName {{{inputs.containerRegistryName}}} -registrySku \"{{{inputs.containerRegistrySKU}}}\" -registryLocation \"{{{inputs.containerRegistryLocation}}}\""
                },
                {
                  "__TaskId__": "80f3f6a0-82a6-4a22-ba7a-e5b8c541b9b8",
                  "azureSubscriptionEndpoint": "{{{assets.ARMResourceGroup}}}",
                  "azureContainerRegistry": "{\"loginServer\":\"{{{inputs.containerRegistryName}}}.azurecr.io\", \"id\" : \"/subscriptions/{{{inputs.subscriptionId}}}/resourceGroups/{{{inputs.resourceGroup}}}/providers/Microsoft.ContainerRegistry/registries/{{{inputs.containerRegistryName}}}\"}"
                },
                {
                  "__TaskId__": "2ff763a7-ce83-4e1f-bc89-0ae63477cebe"
                }
              ]
            }]
          },
          "releaseDefinition": {
            "environments": [{
              "name": "dev",
              "deployedResourceIds": [
                "/subscriptions/{{{inputs.subscriptionId}}}/resourceGroups/{{{inputs.resourceGroup}}}/providers/Microsoft.Devices/IotHubs/{{{inputs.iotHubName}}}"
              ],
              "variables": {
                "DEVOPS_IOTEDGE_REGISTRY_URL": {
                  "value": "{{{inputs.containerRegistryName}}}.azurecr.io"
                }
              },
              "templateFile": "Files/ReleaseDefinitionTemplates/deployIoTEdgeWithoutVM.json",
              "phaseInputs": [{
                "queue": "hostedlinux",
                "taskInputs": [{
                    "__TaskId__": "94a74903-f93f-4075-884f-dc11f34058b4",
                    "ConnectedServiceName": "{{{assets.ARMResourceGroup}}}",
                    "ResourceGroupName": "{{{inputs.resourceGroup}}}",
                    "location": "{{{inputs.iotHubLocation}}}",
                    "csmFileLink": "https://raw.githubusercontent.com/michaeljqzq/devops-iot-sample/arm/arm-iothub.json",
                    "overrideParameters": "-iotHubName {{{inputs.iotHubName}}} -iotHubSku \"{{{inputs.iotHubSku}}}\""
                  },
                  {
                    "__TaskId__": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                    "connectedServiceNameARM": "{{{assets.ARMResourceGroup}}}",
                    "inlineScript": "(az extension add --name azure-cli-iot-ext && az iot hub device-identity show --device-id myEdgeDevice --hub-name {{{inputs.iotHubName}}}) || (az iot hub device-identity create --hub-name {{{inputs.iotHubName}}} --device-id myEdgeDevice --edge-enabled && TMP_OUTPUT=\"$(az iot hub device-identity show-connection-string --device-id myEdgeDevice --hub-name {{{inputs.iotHubName}}})\" && RE=\"\\\"cs\\\":\\s?\\\"(.*)\\\"\" && if [[ $TMP_OUTPUT =~ $RE ]]; then CS_OUTPUT=${BASH_REMATCH[1]}; fi && echo \"##vso[task.setvariable variable=CS_OUTPUT]${CS_OUTPUT}\")"
                  },
                  {
                    "__TaskId__": "80f3f6a0-82a6-4a22-ba7a-e5b8c541b9b8",
                    "connectedServiceNameARM": "{{{assets.ARMResourceGroup}}}",
                    "iothubname": "{{inputs.iotHubName}}"
                  }
                ]
              }]
            }]
          }
        }
      }
    }, {
      "id": "c-existingdevice",
      "type": "ms.vss-continuous-delivery.pipeline-template-type",
      "targets": [
        "ms.vss-continuous-delivery.pipeline-templates"
      ],
      "properties": {
        "description": "i18n:Template for configuring CI/CD pipeline for Azure IoT Edge App using C",
        "attributes": {
          "codeRepositoryType": "Sample",
          "frameworkId": "michaeljqzq.r-vss-continuous-delivery-pipeline-templates.framework-type-iot-edge",
          "runtimeId": "michaeljqzq.r-vss-continuous-delivery-pipeline-templates.runtime-type-edge-c",
          "serviceId": "michaeljqzq.r-vss-continuous-delivery-pipeline-templates.service-type-existing-edge-device"
        },
        "parameters": {
          "imports": [
            "Files/Parameters/ArmEndpointParameters.json",
            "Files/Parameters/ContainerRegistryParameters.json",
            "Files/Parameters/IoTHubParameters.json"
          ]
        },
        "configuration": {
          "assets": [{
            "id": "ARMResourceGroup",
            "type": "endpoint:AzureRM",
            "inputs": {
              "subscriptionId": "{{inputs.subscriptionId}}",
              "authorization": "{{inputs.azureAuth}}"
            }
          }],
          "source": {
            "repository": {
              "id": "https://github.com/VSChina/azure-iot-edge-sample-c",
              "defaultBranch": "master"
            }
          },
          "buildDefinition": {
            "queue": "hostedlinux",
            "templateFile": "Files/BuildDefinitionTemplates/buildIoTEdge.json",
            "variables": {
              "DEVOPS_IOTEDGE_REGISTRY_URL": {
                "value": "{{{inputs.containerRegistryName}}}.azurecr.io"
              }
            },
            "phaseInputs": [{
              "taskInputs": [{
                  "__TaskId__": "94a74903-f93f-4075-884f-dc11f34058b4",
                  "ConnectedServiceName": "{{{assets.ARMResourceGroup}}}",
                  "resourceGroupName": "{{{inputs.resourceGroup}}}",
                  "location": "{{{inputs.containerRegistryLocation}}}",
                  "csmFileLink": "https://raw.githubusercontent.com/michaeljqzq/devops-iot-sample/arm/arm-acr.json",
                  "overrideParameters": "-registryName {{{inputs.containerRegistryName}}} -registrySku \"{{{inputs.containerRegistrySKU}}}\" -registryLocation \"{{{inputs.containerRegistryLocation}}}\""
                },
                {
                  "__TaskId__": "80f3f6a0-82a6-4a22-ba7a-e5b8c541b9b8",
                  "azureSubscriptionEndpoint": "{{{assets.ARMResourceGroup}}}",
                  "azureContainerRegistry": "{\"loginServer\":\"{{{inputs.containerRegistryName}}}.azurecr.io\", \"id\" : \"/subscriptions/{{{inputs.subscriptionId}}}/resourceGroups/{{{inputs.resourceGroup}}}/providers/Microsoft.ContainerRegistry/registries/{{{inputs.containerRegistryName}}}\"}"
                },
                {
                  "__TaskId__": "2ff763a7-ce83-4e1f-bc89-0ae63477cebe"
                }
              ]
            }]
          },
          "releaseDefinition": {
            "environments": [{
              "name": "dev",
              "deployedResourceIds": [
                "/subscriptions/{{{inputs.subscriptionId}}}/resourceGroups/{{{inputs.resourceGroup}}}/providers/Microsoft.Devices/IotHubs/{{{inputs.iotHubName}}}"
              ],
              "variables": {
                "DEVOPS_IOTEDGE_REGISTRY_URL": {
                  "value": "{{{inputs.containerRegistryName}}}.azurecr.io"
                }
              },
              "templateFile": "Files/ReleaseDefinitionTemplates/deployIoTEdgeWithoutVM.json",
              "phaseInputs": [{
                "queue": "hostedlinux",
                "taskInputs": [{
                    "__TaskId__": "94a74903-f93f-4075-884f-dc11f34058b4",
                    "ConnectedServiceName": "{{{assets.ARMResourceGroup}}}",
                    "ResourceGroupName": "{{{inputs.resourceGroup}}}",
                    "location": "{{{inputs.iotHubLocation}}}",
                    "csmFileLink": "https://raw.githubusercontent.com/michaeljqzq/devops-iot-sample/arm/arm-iothub.json",
                    "overrideParameters": "-iotHubName {{{inputs.iotHubName}}} -iotHubSku \"{{{inputs.iotHubSku}}}\""
                  },
                  {
                    "__TaskId__": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                    "connectedServiceNameARM": "{{{assets.ARMResourceGroup}}}",
                    "inlineScript": "(az extension add --name azure-cli-iot-ext && az iot hub device-identity show --device-id myEdgeDevice --hub-name {{{inputs.iotHubName}}}) || (az iot hub device-identity create --hub-name {{{inputs.iotHubName}}} --device-id myEdgeDevice --edge-enabled && TMP_OUTPUT=\"$(az iot hub device-identity show-connection-string --device-id myEdgeDevice --hub-name {{{inputs.iotHubName}}})\" && RE=\"\\\"cs\\\":\\s?\\\"(.*)\\\"\" && if [[ $TMP_OUTPUT =~ $RE ]]; then CS_OUTPUT=${BASH_REMATCH[1]}; fi && echo \"##vso[task.setvariable variable=CS_OUTPUT]${CS_OUTPUT}\")"
                  },
                  {
                    "__TaskId__": "80f3f6a0-82a6-4a22-ba7a-e5b8c541b9b8",
                    "connectedServiceNameARM": "{{{assets.ARMResourceGroup}}}",
                    "iothubname": "{{inputs.iotHubName}}"
                  }
                ]
              }]
            }]
          }
        }
      }
    }, {
      "id": "python-existingdevice",
      "type": "ms.vss-continuous-delivery.pipeline-template-type",
      "targets": [
        "ms.vss-continuous-delivery.pipeline-templates"
      ],
      "properties": {
        "description": "i18n:Template for configuring CI/CD pipeline for Azure IoT Edge App using Python",
        "attributes": {
          "codeRepositoryType": "Sample",
          "frameworkId": "michaeljqzq.r-vss-continuous-delivery-pipeline-templates.framework-type-iot-edge",
          "runtimeId": "ms.vss-continuous-delivery-pipeline-templates.runtime-type-python",
          "serviceId": "michaeljqzq.r-vss-continuous-delivery-pipeline-templates.service-type-existing-edge-device"
        },
        "parameters": {
          "imports": [
            "Files/Parameters/ArmEndpointParameters.json",
            "Files/Parameters/ContainerRegistryParameters.json",
            "Files/Parameters/IoTHubParameters.json",
            "Files/Parameters/VMParameters.json"
          ]
        },
        "configuration": {
          "assets": [{
            "id": "ARMResourceGroup",
            "type": "endpoint:AzureRM",
            "inputs": {
              "subscriptionId": "{{inputs.subscriptionId}}",
              "authorization": "{{inputs.azureAuth}}"
            }
          }],
          "source": {
            "repository": {
              "id": "https://github.com/VSChina/azure-iot-edge-sample-python",
              "defaultBranch": "master"
            }
          },
          "buildDefinition": {
            "queue": "hostedlinux",
            "templateFile": "Files/BuildDefinitionTemplates/buildIoTEdge.json",
            "variables": {
              "DEVOPS_IOTEDGE_REGISTRY_URL": {
                "value": "{{{inputs.containerRegistryName}}}.azurecr.io"
              }
            },
            "phaseInputs": [{
              "taskInputs": [{
                  "__TaskId__": "94a74903-f93f-4075-884f-dc11f34058b4",
                  "ConnectedServiceName": "{{{assets.ARMResourceGroup}}}",
                  "resourceGroupName": "{{{inputs.resourceGroup}}}",
                  "location": "{{{inputs.containerRegistryLocation}}}",
                  "csmFileLink": "https://raw.githubusercontent.com/michaeljqzq/devops-iot-sample/arm/arm-acr.json",
                  "overrideParameters": "-registryName {{{inputs.containerRegistryName}}} -registrySku \"{{{inputs.containerRegistrySKU}}}\" -registryLocation \"{{{inputs.containerRegistryLocation}}}\""
                },
                {
                  "__TaskId__": "80f3f6a0-82a6-4a22-ba7a-e5b8c541b9b8",
                  "azureSubscriptionEndpoint": "{{{assets.ARMResourceGroup}}}",
                  "azureContainerRegistry": "{\"loginServer\":\"{{{inputs.containerRegistryName}}}.azurecr.io\", \"id\" : \"/subscriptions/{{{inputs.subscriptionId}}}/resourceGroups/{{{inputs.resourceGroup}}}/providers/Microsoft.ContainerRegistry/registries/{{{inputs.containerRegistryName}}}\"}"
                },
                {
                  "__TaskId__": "2ff763a7-ce83-4e1f-bc89-0ae63477cebe"
                }
              ]
            }]
          },
          "releaseDefinition": {
            "environments": [{
              "name": "dev",
              "deployedResourceIds": [
                "/subscriptions/{{{inputs.subscriptionId}}}/resourceGroups/{{{inputs.resourceGroup}}}/providers/Microsoft.Devices/IotHubs/{{{inputs.iotHubName}}}"
              ],
              "variables": {
                "DEVOPS_IOTEDGE_REGISTRY_URL": {
                  "value": "{{{inputs.containerRegistryName}}}.azurecr.io"
                }
              },
              "templateFile": "Files/ReleaseDefinitionTemplates/deployIoTEdgeWithoutVM.json",
              "phaseInputs": [{
                "queue": "hostedlinux",
                "taskInputs": [{
                    "__TaskId__": "94a74903-f93f-4075-884f-dc11f34058b4",
                    "ConnectedServiceName": "{{{assets.ARMResourceGroup}}}",
                    "ResourceGroupName": "{{{inputs.resourceGroup}}}",
                    "location": "{{{inputs.iotHubLocation}}}",
                    "csmFileLink": "https://raw.githubusercontent.com/michaeljqzq/devops-iot-sample/arm/arm-iothub.json",
                    "overrideParameters": "-iotHubName {{{inputs.iotHubName}}} -iotHubSku \"{{{inputs.iotHubSku}}}\""
                  },
                  {
                    "__TaskId__": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
                    "connectedServiceNameARM": "{{{assets.ARMResourceGroup}}}",
                    "inlineScript": "(az extension add --name azure-cli-iot-ext && az iot hub device-identity show --device-id myEdgeDevice --hub-name {{{inputs.iotHubName}}}) || (az iot hub device-identity create --hub-name {{{inputs.iotHubName}}} --device-id myEdgeDevice --edge-enabled && TMP_OUTPUT=\"$(az iot hub device-identity show-connection-string --device-id myEdgeDevice --hub-name {{{inputs.iotHubName}}})\" && RE=\"\\\"cs\\\":\\s?\\\"(.*)\\\"\" && if [[ $TMP_OUTPUT =~ $RE ]]; then CS_OUTPUT=${BASH_REMATCH[1]}; fi && echo \"##vso[task.setvariable variable=CS_OUTPUT]${CS_OUTPUT}\")"
                  },
                  {
                    "__TaskId__": "80f3f6a0-82a6-4a22-ba7a-e5b8c541b9b8",
                    "connectedServiceNameARM": "{{{assets.ARMResourceGroup}}}",
                    "iothubname": "{{inputs.iotHubName}}"
                  }
                ]
              }]
            }]
          }
        }
      }
    },
    {
      "id": "runtime-type-edge-c",
      "type": "ms.vss-continuous-delivery.pipeline-attribute-descriptor-type",
      "targets": [
        "ms.vss-continuous-delivery.pipeline-attribute-descriptors"
      ],
      "properties": {
        "name": "i18n:C",
        "description": "i18n:New Azure IoT Edge app using C",
        "type": "runtime",
        "iconSvgContent": "<svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 20 20' version='1.1'>    <title>C programming language</title>    <desc>Created with Sketch.</desc>    <defs></defs>    <g id='C-programming-language' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'>        <polygon id='Fill-1' fill-opacity='0' fill='#F6F6F6' points='0 20 20 20 20 0 0 0'></polygon>        <g id='Page-1'>            <polygon id='Fill-1' fill='#0078D4' points='0 20 20 20 20 0 0 0'></polygon>            <g id='Group-8' transform='translate(2.000000, 4.000000)' fill='#FFFFFF'>                <path d='M10.7587,9.6389 C10.1867,9.9159 9.4387,10.0549 8.5167,10.0549 C7.3137,10.0549 6.3677,9.7009 5.6787,8.9929 C4.9897,8.2859 4.6457,7.3449 4.6457,6.1669 C4.6457,4.9129 5.0327,3.8959 5.8077,3.1159 C6.5817,2.3359 7.5867,1.9459 8.8227,1.9459 C9.5877,1.9459 10.2337,2.0419 10.7587,2.2359 L10.7587,3.9359 C10.2337,3.6219 9.6357,3.4659 8.9647,3.4659 C8.2287,3.4659 7.6347,3.6979 7.1827,4.1599 C6.7307,4.6229 6.5047,5.2499 6.5047,6.0409 C6.5047,6.7989 6.7177,7.4039 7.1447,7.8539 C7.5707,8.3039 8.1447,8.5289 8.8657,8.5289 C9.5557,8.5289 10.1867,8.3609 10.7587,8.0259 L10.7587,9.6389 Z' id='Fill-2'></path>                <path d='M1.4277,0.7688 C1.1497,1.0588 1.0097,1.5308 1.0097,2.1868 L1.0097,4.2198 C1.0097,5.1738 0.6737,5.6978 -0.0003,5.7928 L-0.0003,6.2068 C0.6737,6.3068 1.0097,6.8678 1.0097,7.8908 L1.0097,9.8128 C1.0097,10.4698 1.1497,10.9418 1.4277,11.2308 C1.7057,11.5198 2.1187,11.6758 2.6667,11.6978 L4.1717,11.6978 L4.1717,11.1538 L2.6667,11.1538 C2.2867,11.1318 2.0207,11.0088 1.8647,10.7848 C1.7087,10.5598 1.6317,10.1738 1.6317,9.6258 L1.6317,7.8388 C1.6317,6.8248 1.3187,6.2178 0.6927,6.0188 L0.6927,5.9938 C1.3187,5.8038 1.6317,5.2298 1.6317,4.2708 L1.6317,2.3748 C1.6317,1.8268 1.7087,1.4398 1.8647,1.2158 C2.0207,0.9918 2.2867,0.8688 2.6667,0.8468 L4.1717,0.8468 L4.1717,0.3028 L2.6667,0.3028 C2.1187,0.3248 1.7057,0.4798 1.4277,0.7688' id='Fill-4'></path>                <path d='M14.996,4.2194 L14.996,2.1864 C14.996,1.5264 14.857,1.0524 14.579,0.7654 C14.301,0.4784 13.888,0.3244 13.339,0.3024 L11.834,0.3024 L11.834,0.8464 L13.339,0.8464 C13.693,0.8684 13.953,0.9824 14.119,1.1894 C14.285,1.3964 14.368,1.7914 14.368,2.3744 L14.368,4.2714 C14.368,5.2254 14.684,5.7994 15.313,5.9934 L15.313,6.0194 C14.684,6.2184 14.368,6.8244 14.368,7.8384 L14.368,9.6254 C14.368,10.2084 14.285,10.6034 14.119,10.8104 C13.953,11.0174 13.693,11.1324 13.339,11.1534 L11.834,11.1534 L11.834,11.6974 L13.339,11.6974 C13.888,11.6754 14.301,11.5214 14.579,11.2344 C14.857,10.9474 14.996,10.4734 14.996,9.8134 L14.996,7.8904 C14.996,6.8674 15.331,6.3064 16,6.2074 L16,5.7924 C15.331,5.6984 14.996,5.1734 14.996,4.2194' id='Fill-6'></path>            </g>        </g>    </g></svg>"
      }
    },
    {
      "id": "framework-type-iot-edge",
      "type": "ms.vss-continuous-delivery.pipeline-attribute-descriptor-type",
      "targets": [
        "ms.vss-continuous-delivery.pipeline-attribute-descriptors"
      ],
      "properties": {
        "name": "i18n:Azure IoT Edge",
        "description": "i18n:Azure IoT Edge framework",
        "type": "framework",
        "iconSvgContent": "<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px'  viewBox='0 0 50 50' style='enable-background:new 0 0 50 50;' xml:space='preserve'><style type='text/css'> .st0{fill:#017ACC;} .st1{opacity:0.2;fill:#FFFFFF;enable-background:new    ;} .st2{opacity:0.2;fill:#1E1E1E;enable-background:new    ;} .st3{fill:#FFFFFF;enable-background:new    ;}</style><g> <path class='st0' d='M47.7,35H2.3C1.6,35,1,35.6,1,36.3v12.4C1,49.4,1.6,50,2.3,50h45.4c0.7,0,1.3-0.6,1.3-1.3V36.3  C49,35.6,48.4,35,47.7,35z'/> <rect x='42' y='38' class='st1' width='3' height='3'/> <rect x='42' y='44' class='st1' width='3' height='3'/> <path class='st0' d='M42.5,14.8c0.4-1.1,0.6-2.3,0.6-3.5c0-6.2-5.1-11.2-11.4-11.2c-4.8,0-8.8,2.9-10.5,7c-1.5-1.6-3.7-2.6-6-2.6  C10.6,4.5,7,8.1,7,12.6c0,0.8,0.1,1.6,0.3,2.3c-3.6,1.3-6.1,4.7-6.1,8.7c0,5.1,4.2,9.3,9.4,9.3h29c5.2,0,9.4-4.2,9.4-9.3  C48.9,19.6,46.2,16.1,42.5,14.8z'/> <path class='st1' d='M4.3,28.9c0-4.1,2.7-7.5,6.4-8.9c-0.2-0.7-0.4-1.6-0.4-2.4c0-4.6,3.8-8.3,8.6-8.3c2.5,0,4.8,1,6.3,2.6  c1.8-4.1,6-7.1,11-7.1c2,0,3.9,0.5,5.5,1.3C39.9,2.5,36,0,31.5,0C26.7,0,22.7,2.8,21,6.7c-1.5-1.5-3.7-2.5-6-2.5  c-4.6,0-8.2,3.5-8.2,7.9c0,0.8,0.1,1.6,0.3,2.3C3.5,15.7,1,19,1,22.8c0,2.7,1.3,5.2,3.3,6.9C4.3,29.5,4.3,29.2,4.3,28.9z'/> <path class='st2' d='M41.4,25.1c-0.6-1.4-1.9-2.4-3.5-2.4c-0.5,0-0.9,0.1-1.4,0.3c-0.1,0-0.2,0.1-0.3,0.2l-3.7-3.5  c0.3-0.7,0.4-1.4,0.4-2.1c0-3-2.5-5.5-5.5-5.5c-1.5,0-2.8,0.6-3.8,1.5l-2-1.2c0-0.6,0-1.1-0.2-1.7c-0.6-1.4-1.9-2.4-3.5-2.4  c-0.5,0-0.9,0.1-1.4,0.3c-1.9,0.7-2.9,2.9-2.1,4.8c0.6,1.4,1.9,2.4,3.5,2.4l0,0c0.5,0,0.9-0.1,1.4-0.3c0.3-0.1,0.6-0.3,0.8-0.5  l2,1.2c0,0.4-0.1,0.8-0.1,1.3c0,0.6,0.1,1.2,0.3,1.7l-3.9,2.4c-0.5-0.3-1-0.4-1.6-0.4c-0.4,0-0.8,0.1-1.2,0.2  c-1.6,0.6-2.4,2.5-1.8,4.1c0.5,1.2,1.6,2,3,2l0,0c0.4,0,0.8-0.1,1.2-0.2c1.3-0.5,2-1.7,2-3l4-2.5c0.5,0.4,1.1,0.7,1.7,0.9  l-2.6,15.5c-1.8,0.6-3.1,2.3-3.1,4.3c0,2.5,2,4.5,4.5,4.5s4.5-2,4.5-4.5c0-1.9-1.2-3.5-2.9-4.2l2.6-15.4c0.7-0.2,1.4-0.4,1.9-0.8  l3.7,3.6c-0.2,0.7-0.1,1.5,0.1,2.2c0.6,1.4,1.9,2.4,3.5,2.4c0.5,0,0.9-0.1,1.4-0.3C41.2,29.2,42.2,27,41.4,25.1z'/> <path class='st3' d='M40.5,25.5C40,24.1,38.4,23.4,37,24c-0.3,0.1-0.6,0.3-0.8,0.5l-4.8-4.6c0.4-0.7,0.7-1.5,0.7-2.3  c0-2.5-2-4.5-4.5-4.5c-1.5,0-2.8,0.7-3.6,1.8l-3.3-2.1c0.2-0.6,0.2-1.2-0.1-1.8C20,9.6,18.4,8.9,17,9.4s-2.1,2.1-1.5,3.5  c0.5,1.4,2.1,2.1,3.5,1.5c0.4-0.2,0.8-0.4,1.1-0.8l3.3,2c-0.2,0.5-0.4,1.1-0.4,1.7c0,0.8,0.2,1.5,0.5,2.1l-5.2,3.2  c-0.6-0.6-1.5-0.8-2.3-0.5c-1.1,0.4-1.7,1.7-1.2,2.8s1.7,1.7,2.8,1.2c1.1-0.4,1.6-1.5,1.3-2.6l5.3-3.3c0.7,0.8,1.6,1.3,2.7,1.4  L24.3,39c-1.8,0.1-3.3,1.6-3.3,3.5s1.6,3.5,3.5,3.5s3.5-1.6,3.5-3.5c0-1.7-1.2-3-2.7-3.4L27.9,22c1.1-0.1,2.1-0.5,2.8-1.3l4.8,4.6  c-0.3,0.7-0.3,1.4-0.1,2.1c0.5,1.4,2.1,2.1,3.5,1.5S41,26.9,40.5,25.5z'/></g></svg>"
      }
    },
    {
      "id": "service-type-linux-vm-edge-device",
      "type": "ms.vss-continuous-delivery.pipeline-attribute-descriptor-type",
      "targets": [
        "ms.vss-continuous-delivery.pipeline-attribute-descriptors"
      ],
      "properties": {
        "name": "i18n:IoT Hub with simulated device",
        "description": "i18n:Create a new IoT Hub and Ubuntu Server 16.04 LTS amd64 virtual machine as a simulated Edge device",
        "type": "resource",
        "iconSvgContent": "<svg viewBox='0 0 50 50' class='fxs-portal-svg' role='presentation' focusable='false' xmlns:svg='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'><g><title></title><path d='M32.426 38.534H18.83c1.634 5.768-.561 6.595-10.175 6.595v3.02h32.692v-3.02c-9.614 0-10.557-.824-8.921-6.595' class='msportalfx-svg-c04'></path><path d='M46.98 2H2.718C1.214 2 .001 3.345.001 4.847v30.866c0 1.493 1.213 2.823 2.717 2.823H46.98c1.501 0 3.021-1.33 3.021-2.823V4.847C50.001 3.341 48.481 2 46.98 2' class='msportalfx-svg-c03'></path><path opacity='.2' d='M47.011 2.003l-.031-.002H2.717C1.213 2.001 0 3.345 0 4.848v30.865c0 1.494 1.213 2.824 2.717 2.824H3.77L47.011 2.003z' class='msportalfx-svg-c01'></path><path d='M46.098 5.848v28.841H3.79V5.848z' class='msportalfx-svg-c15'></path><path d='M3.79 34.689h.058V5.849l38.68-.058h.002l-38.74.058z' class='msportalfx-svg-c15'></path><path d='M8.655 45.128h32.692v3.021H8.655z' class='msportalfx-svg-c03'></path><path d='M25.518 4.095a.71.71 0 1 1-1.42 0 .71.71 0 0 1 1.42 0' class='msportalfx-svg-c13'></path><path d='M25.546 19.394a.278.278 0 0 1-.134-.038l-8.804-5.082a.267.267 0 0 1 0-.461l8.751-5.049a.268.268 0 0 1 .263 0l8.807 5.084a.264.264 0 0 1 .131.23.262.262 0 0 1-.131.23l-8.748 5.048a.27.27 0 0 1-.135.038' class='msportalfx-svg-c01'></path><path opacity='.7' d='M24.281 31.746a.251.251 0 0 1-.134-.036l-8.778-5.066a.26.26 0 0 1-.136-.231V16.247c0-.096.051-.183.136-.231a.263.263 0 0 1 .268 0l8.777 5.064a.28.28 0 0 1 .13.233v10.166a.272.272 0 0 1-.13.231.28.28 0 0 1-.133.036' class='msportalfx-svg-c01'></path><path opacity='.4' d='M26.766 31.746a.287.287 0 0 1-.138-.036.27.27 0 0 1-.129-.231V21.377c0-.094.051-.182.129-.231l8.777-5.064a.26.26 0 0 1 .264 0 .263.263 0 0 1 .135.23v10.101a.261.261 0 0 1-.135.231l-8.774 5.066a.236.236 0 0 1-.129.036' class='msportalfx-svg-c01'></path></g></svg>"
      }
    },
    {
      "id": "service-type-existing-edge-device",
      "type": "ms.vss-continuous-delivery.pipeline-attribute-descriptor-type",
      "targets": [
        "ms.vss-continuous-delivery.pipeline-attribute-descriptors"
      ],
      "properties": {
        "name": "i18n:IoT Hub with existing device",
        "description": "i18n:Create a new IoT Hub, choose this when you already have an existing Edge device",
        "type": "resource",
        "iconSvgContent": "<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 50 50' style='enable-background:new 0 0 50 50;' xml:space='preserve'><style type='text/css'> .st0{fill:#027ACC;} .st1{opacity:0.2;} .st2{fill:#FFFFFF;} .st3{fill:none;} .st4{opacity:0.4;fill:#027ACC;} .st5{opacity:0.2;fill:#FFFFFF;}</style><g> <g>  <rect x='34.4' class='st0' width='3.3' height='7.8'/>  <rect x='27' y='0' class='st0' width='3.3' height='7.8'/>  <rect x='19.6' y='0' class='st0' width='3.3' height='7.8'/>  <rect x='12.2' y='0' class='st0' width='3.3' height='7.8'/> </g> <g>  <rect x='34.4' y='42.2' class='st0' width='3.3' height='7.8'/>  <rect x='27' y='42.2' class='st0' width='3.3' height='7.8'/>  <rect x='19.6' y='42.2' class='st0' width='3.3' height='7.8'/>  <rect x='12.2' y='42.2' class='st0' width='3.3' height='7.8'/> </g> <g class='st1'>  <rect x='34.4' class='st2' width='3.3' height='7.8'/>  <rect x='27' y='0' class='st2' width='3.3' height='7.8'/>  <rect x='19.6' y='0' class='st2' width='3.3' height='7.8'/>  <rect x='12.2' y='0' class='st2' width='3.3' height='7.8'/> </g> <g class='st1'>  <rect x='34.4' y='42.2' class='st2' width='3.3' height='7.8'/>  <rect x='27' y='42.2' class='st2' width='3.3' height='7.8'/>  <rect x='19.6' y='42.2' class='st2' width='3.3' height='7.8'/>  <rect x='12.2' y='42.2' class='st2' width='3.3' height='7.8'/> </g> <g>  <rect x='42.2' y='34.5' class='st0' width='7.8' height='3.3'/>  <rect x='42.2' y='27.1' class='st0' width='7.8' height='3.3'/>  <rect x='42.2' y='19.6' class='st0' width='7.8' height='3.3'/>  <rect x='42.2' y='12.2' class='st0' width='7.8' height='3.3'/> </g> <g>  <rect x='0' y='34.5' class='st0' width='7.8' height='3.3'/>  <rect x='0' y='27.1' class='st0' width='7.8' height='3.3'/>  <rect x='0' y='19.6' class='st0' width='7.8' height='3.3'/>  <rect y='12.2' class='st0' width='7.8' height='3.3'/> </g> <g class='st1'>  <rect x='42.2' y='34.5' class='st2' width='7.8' height='3.3'/>  <rect x='42.2' y='27.1' class='st2' width='7.8' height='3.3'/>  <rect x='42.2' y='19.6' class='st2' width='7.8' height='3.3'/>  <rect x='42.2' y='12.2' class='st2' width='7.8' height='3.3'/> </g> <g class='st1'>  <rect x='0' y='34.5' class='st2' width='7.8' height='3.3'/>  <rect x='0' y='27.1' class='st2' width='7.8' height='3.3'/>  <rect x='0' y='19.6' class='st2' width='7.8' height='3.3'/>  <rect y='12.2' class='st2' width='7.8' height='3.3'/> </g> <rect x='0.5' class='st3' width='49.5' height='50'/></g><g> <path class='st0' d='M5.9,5.9v38.2h38.2V5.9H5.9z M41.7,41.7H8.3V8.3h33.4V41.7z'/> <path class='st4' d='M8.3,41.7h33.4V8.3H8.3V41.7z M12.2,12.2h25.6v25.6H12.2V12.2z'/> <path class='st0' d='M37.8,12.2H12.2v25.6h25.6V12.2z M34.5,34.5h-19v-19h19V34.5z'/> <path class='st5' d='M5.9,5.9v38.2h38.2V5.9H5.9z M41.7,41.7H8.3V8.3h33.4V41.7z'/> <path class='st5' d='M37.8,12.2H12.2v25.6h25.6V12.2z M34.5,34.5h-19v-19h19V34.5z'/> <rect x='15.5' y='15.5' class='st4' width='19' height='19'/></g></svg>"
      }
    }
  ]
}